//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the espeak_ros package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __espeak_ros__ESPEAKCONFIG_H__
#define __espeak_ros__ESPEAKCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace espeak_ros
{
  class EspeakConfigStatics;

  class EspeakConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(EspeakConfig &config, const EspeakConfig &max, const EspeakConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const EspeakConfig &config1, const EspeakConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, EspeakConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const EspeakConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, EspeakConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const EspeakConfig &config) const = 0;
      virtual void getValue(const EspeakConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T EspeakConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (EspeakConfig::* field);

      virtual void clamp(EspeakConfig &config, const EspeakConfig &max, const EspeakConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const EspeakConfig &config1, const EspeakConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, EspeakConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const EspeakConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, EspeakConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const EspeakConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const EspeakConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, EspeakConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, EspeakConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<EspeakConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(EspeakConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("rate"==(*_i)->name){rate = boost::any_cast<int>(val);}
        if("volume"==(*_i)->name){volume = boost::any_cast<int>(val);}
        if("pitch"==(*_i)->name){pitch = boost::any_cast<int>(val);}
        if("range"==(*_i)->name){range = boost::any_cast<int>(val);}
        if("wordgap"==(*_i)->name){wordgap = boost::any_cast<int>(val);}
        if("age"==(*_i)->name){age = boost::any_cast<int>(val);}
        if("voice"==(*_i)->name){voice = boost::any_cast<int>(val);}
        if("dialect"==(*_i)->name){dialect = boost::any_cast<int>(val);}
        if("punctuation"==(*_i)->name){punctuation = boost::any_cast<int>(val);}
        if("capitals"==(*_i)->name){capitals = boost::any_cast<int>(val);}
        if("gender"==(*_i)->name){gender = boost::any_cast<int>(val);}
      }
    }

    int rate;
int volume;
int pitch;
int range;
int wordgap;
int age;
int voice;
int dialect;
int punctuation;
int capitals;
int gender;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int rate;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int volume;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int pitch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int range;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int wordgap;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int age;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int voice;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int dialect;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int punctuation;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int capitals;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gender;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("EspeakConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const EspeakConfig &__max__ = __getMax__();
      const EspeakConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const EspeakConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const EspeakConfig &__getDefault__();
    static const EspeakConfig &__getMax__();
    static const EspeakConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const EspeakConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void EspeakConfig::ParamDescription<std::string>::clamp(EspeakConfig &config, const EspeakConfig &max, const EspeakConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class EspeakConfigStatics
  {
    friend class EspeakConfig;

    EspeakConfigStatics()
    {
EspeakConfig::GroupDescription<EspeakConfig::DEFAULT, EspeakConfig> Default("Default", "", 0, 0, true, &EspeakConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.rate = 80;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.rate = 450;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.rate = 175;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("rate", "int", 0, "Speaking speed in word per minute", "", &EspeakConfig::rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("rate", "int", 0, "Speaking speed in word per minute", "", &EspeakConfig::rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.volume = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.volume = 200;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.volume = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("volume", "int", 0, "Volume", "", &EspeakConfig::volume)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("volume", "int", 0, "Volume", "", &EspeakConfig::volume)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pitch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pitch = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pitch = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("pitch", "int", 0, "Base pitch", "", &EspeakConfig::pitch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("pitch", "int", 0, "Base pitch", "", &EspeakConfig::pitch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.range = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.range = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.range = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("range", "int", 0, "Pitch range", "", &EspeakConfig::range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("range", "int", 0, "Pitch range", "", &EspeakConfig::range)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.wordgap = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.wordgap = 1000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.wordgap = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("wordgap", "int", 0, "Pause between words, units of 10mS", "", &EspeakConfig::wordgap)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("wordgap", "int", 0, "Pause between words, units of 10mS", "", &EspeakConfig::wordgap)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.age = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.age = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.age = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("age", "int", 0, "Age in years", "", &EspeakConfig::age)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("age", "int", 0, "Age in years", "", &EspeakConfig::age)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.voice = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.voice = 7;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.voice = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("voice", "int", 0, "Voice name", "{'enum_description': 'Voice name', 'enum': [{'srcline': 15, 'description': 'Default voice', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'default'}, {'srcline': 16, 'description': 'English UK', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'english'}, {'srcline': 17, 'description': 'Lancashire', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'lancashire'}, {'srcline': 18, 'description': 'English-rp', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'english_rp'}, {'srcline': 19, 'description': 'English - West Midlands', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'english_wmids'}, {'srcline': 20, 'description': 'English US', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'english_us'}, {'srcline': 21, 'description': 'Scottish English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'en_scottish'}, {'srcline': 22, 'description': 'Brazilian Portuguese', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'brazil'}]}", &EspeakConfig::voice)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("voice", "int", 0, "Voice name", "{'enum_description': 'Voice name', 'enum': [{'srcline': 15, 'description': 'Default voice', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'default'}, {'srcline': 16, 'description': 'English UK', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'english'}, {'srcline': 17, 'description': 'Lancashire', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'lancashire'}, {'srcline': 18, 'description': 'English-rp', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'english_rp'}, {'srcline': 19, 'description': 'English - West Midlands', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'english_wmids'}, {'srcline': 20, 'description': 'English US', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'english_us'}, {'srcline': 21, 'description': 'Scottish English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'en_scottish'}, {'srcline': 22, 'description': 'Brazilian Portuguese', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'brazil'}]}", &EspeakConfig::voice)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dialect = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dialect = 7;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dialect = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("dialect", "int", 0, "Language (with optional dialect)", "{'enum_description': 'Voice name', 'enum': [{'srcline': 26, 'description': 'English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'en'}, {'srcline': 27, 'description': 'English UK', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'en_uk'}, {'srcline': 28, 'description': 'Lancashire', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_north'}, {'srcline': 29, 'description': 'English-rp', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_rp'}, {'srcline': 30, 'description': 'English - West Midlands', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_wmids'}, {'srcline': 31, 'description': 'English US', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'en_us'}, {'srcline': 32, 'description': 'Scottish English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'en_sc'}, {'srcline': 33, 'description': 'Brazilian Portuguese', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'pt_br'}]}", &EspeakConfig::dialect)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("dialect", "int", 0, "Language (with optional dialect)", "{'enum_description': 'Voice name', 'enum': [{'srcline': 26, 'description': 'English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'en'}, {'srcline': 27, 'description': 'English UK', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'en_uk'}, {'srcline': 28, 'description': 'Lancashire', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_north'}, {'srcline': 29, 'description': 'English-rp', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_rp'}, {'srcline': 30, 'description': 'English - West Midlands', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'en_uk_wmids'}, {'srcline': 31, 'description': 'English US', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'en_us'}, {'srcline': 32, 'description': 'Scottish English', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'en_sc'}, {'srcline': 33, 'description': 'Brazilian Portuguese', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'pt_br'}]}", &EspeakConfig::dialect)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.punctuation = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.punctuation = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.punctuation = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("punctuation", "int", 0, "Which punctuation characters to announce", "{'enum_description': 'Which punctuation characters to announce', 'enum': [{'srcline': 37, 'description': 'None', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'NoCharacters'}, {'srcline': 38, 'description': 'All characters', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AllCharacters'}, {'srcline': 39, 'description': 'Some characters', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'SomeCharacters'}]}", &EspeakConfig::punctuation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("punctuation", "int", 0, "Which punctuation characters to announce", "{'enum_description': 'Which punctuation characters to announce', 'enum': [{'srcline': 37, 'description': 'None', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'NoCharacters'}, {'srcline': 38, 'description': 'All characters', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AllCharacters'}, {'srcline': 39, 'description': 'Some characters', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'SomeCharacters'}]}", &EspeakConfig::punctuation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.capitals = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.capitals = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.capitals = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("capitals", "int", 0, "How to announce capital letters", "{'enum_description': 'How to announce capital letters', 'enum': [{'srcline': 44, 'description': 'None', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'None'}, {'srcline': 45, 'description': 'By sound icon', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'SoundIcon'}, {'srcline': 46, 'description': 'By spelling', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Spelling'}, {'srcline': 47, 'description': 'By raising pitch', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RaisingPitch'}]}", &EspeakConfig::capitals)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("capitals", "int", 0, "How to announce capital letters", "{'enum_description': 'How to announce capital letters', 'enum': [{'srcline': 44, 'description': 'None', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'None'}, {'srcline': 45, 'description': 'By sound icon', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'SoundIcon'}, {'srcline': 46, 'description': 'By spelling', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Spelling'}, {'srcline': 47, 'description': 'By raising pitch', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RaisingPitch'}]}", &EspeakConfig::capitals)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gender = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gender = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gender = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("gender", "int", 0, "Voice gender", "{'enum_description': 'Voice gender', 'enum': [{'srcline': 52, 'description': 'Not specified', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Not_specified'}, {'srcline': 53, 'description': 'Male', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Male'}, {'srcline': 54, 'description': 'Female', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Female'}]}", &EspeakConfig::gender)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EspeakConfig::AbstractParamDescriptionConstPtr(new EspeakConfig::ParamDescription<int>("gender", "int", 0, "Voice gender", "{'enum_description': 'Voice gender', 'enum': [{'srcline': 52, 'description': 'Not specified', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Not_specified'}, {'srcline': 53, 'description': 'Male', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Male'}, {'srcline': 54, 'description': 'Female', 'srcfile': '/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Female'}]}", &EspeakConfig::gender)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(EspeakConfig::AbstractGroupDescriptionConstPtr(new EspeakConfig::GroupDescription<EspeakConfig::DEFAULT, EspeakConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<EspeakConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<EspeakConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<EspeakConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    EspeakConfig __max__;
    EspeakConfig __min__;
    EspeakConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const EspeakConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static EspeakConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &EspeakConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const EspeakConfig &EspeakConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const EspeakConfig &EspeakConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const EspeakConfig &EspeakConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<EspeakConfig::AbstractParamDescriptionConstPtr> &EspeakConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<EspeakConfig::AbstractGroupDescriptionConstPtr> &EspeakConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const EspeakConfigStatics *EspeakConfig::__get_statics__()
  {
    const static EspeakConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = EspeakConfigStatics::get_instance();

    return statics;
  }

//#line 15 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_default = 0;
//#line 16 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_english = 1;
//#line 17 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_lancashire = 2;
//#line 18 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_english_rp = 3;
//#line 19 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_english_wmids = 4;
//#line 20 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_english_us = 5;
//#line 21 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_scottish = 6;
//#line 22 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_brazil = 7;
//#line 26 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en = 0;
//#line 27 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_uk = 1;
//#line 28 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_uk_north = 2;
//#line 29 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_uk_rp = 3;
//#line 30 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_uk_wmids = 4;
//#line 31 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_us = 5;
//#line 32 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_en_sc = 6;
//#line 33 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_pt_br = 7;
//#line 37 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_NoCharacters = 0;
//#line 38 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_AllCharacters = 1;
//#line 39 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_SomeCharacters = 2;
//#line 44 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_None = 0;
//#line 45 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_SoundIcon = 1;
//#line 46 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_Spelling = 2;
//#line 47 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_RaisingPitch = 3;
//#line 52 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_Not_specified = 1;
//#line 53 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_Male = 1;
//#line 54 "/home/zeged/catkin_ws/src/armadillo2/armadillo2_utils/espeak_ros/cfg/EspeakConfig.cfg"
      const int Espeak_Female = 2;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __ESPEAKRECONFIGURATOR_H__
